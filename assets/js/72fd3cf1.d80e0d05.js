"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3362],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=u(r),m=n,f=l["".concat(s,".").concat(m)]||l[m]||d[m]||o;return r?a.createElement(f,c(c({ref:t},p),{},{components:r})):a.createElement(f,c({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[l]="string"==typeof e?e:n,c[1]=i;for(var u=2;u<o;u++)c[u]=r[u];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9510:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:3},c="Create a project",i={unversionedId:"quickstart/create-a-project",id:"quickstart/create-a-project",title:"Create a project",description:"Projects in Health Discovery are used to separate data, configurations and users from each other. For this guide we will create a new project named quickstart.",source:"@site/docs/quickstart/create-a-project.md",sourceDirName:"quickstart",slug:"/quickstart/create-a-project",permalink:"/docusaurus/docs/next/quickstart/create-a-project",draft:!1,editUrl:"https://github.com/cgaege/docusaurus/tree/main/docs/quickstart/create-a-project.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create an API token",permalink:"/docusaurus/docs/next/quickstart/create-an-API-token"},next:{title:"Start a pipeline",permalink:"/docusaurus/docs/next/quickstart/start-a-pipeline"}},s={},u=[],p={toc:u},l="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"create-a-project"},"Create a project"),(0,n.kt)("p",null,"Projects in Health Discovery are used to separate data, configurations and users from each other. For this guide we will create a new project named ",(0,n.kt)("inlineCode",{parentName:"p"},"quickstart"),". "),(0,n.kt)("p",null,"Please replace ",(0,n.kt)("inlineCode",{parentName:"p"},"YOUR-API-TOKEN")," with your API token."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="POST /v1/projects"',title:'"POST','/v1/projects"':!0},'curl -X POST "http://localhost:8080/health-discovery/rest/v1/projects?description=quickstart-tutorial-project&name=quickstart" \\\n  -H "accept: application/json;charset=UTF-8" \\\n  -H "api-token: YOUR-API-TOKEN"\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="RESPONSE"',title:'"RESPONSE"'},'{\n  "payload": {\n    "id": 1009,\n    "name": "quickstart",\n    "description": "quickstart-tutorial-project"\n  },\n  "errorMessages": []\n}\n')),(0,n.kt)("p",null,"Congratulations, you've successfully created a new project."))}d.isMDXComponent=!0}}]);