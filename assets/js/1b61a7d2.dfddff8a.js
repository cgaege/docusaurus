"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4927],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),o=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=o(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=o(r),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,s[1]=p;for(var o=2;o<i;o++)s[o]=r[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2069:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:4},s="Start a pipeline",p={unversionedId:"quickstart/start-a-pipeline",id:"quickstart/start-a-pipeline",title:"Start a pipeline",description:"Health Discovery includes various preconfigured NLP pipelines. This quickstart guide will use the discharge pipeline that is able to extract medical entities like diagnoses, medications and laboratory values from patient records or discharge letters.",source:"@site/docs/quickstart/start-a-pipeline.md",sourceDirName:"quickstart",slug:"/quickstart/start-a-pipeline",permalink:"/docusaurus/docs/next/quickstart/start-a-pipeline",draft:!1,editUrl:"https://github.com/cgaege/docusaurus/tree/main/docs/quickstart/start-a-pipeline.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create a project",permalink:"/docusaurus/docs/next/quickstart/create-a-project"},next:{title:"Analyse health text data",permalink:"/docusaurus/docs/next/quickstart/analyse-text"}},l={},o=[{value:"Start the <code>discharge</code> pipeline",id:"start-the-discharge-pipeline",level:2},{value:"Verify that pipeline is started",id:"verify-that-pipeline-is-started",level:2}],c={toc:o},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"start-a-pipeline"},"Start a pipeline"),(0,a.kt)("p",null,"Health Discovery includes various preconfigured NLP pipelines. This quickstart guide will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"discharge")," pipeline that is able to extract medical entities like ",(0,a.kt)("inlineCode",{parentName:"p"},"diagnoses"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"medications")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"laboratory values")," from patient records or discharge letters."),(0,a.kt)("h2",{id:"start-the-discharge-pipeline"},"Start the ",(0,a.kt)("inlineCode",{parentName:"h2"},"discharge")," pipeline"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="PUT /v1/textanalysis/projects/{projectName}/pipelines/{pipelineName}/start" showLineNumbers',title:'"PUT','/v1/textanalysis/projects/{projectName}/pipelines/{pipelineName}/start"':!0,showLineNumbers:!0},'curl -X PUT "http://localhost:8080/health-discovery/rest/v1/textanalysis/projects/YOUR-PROJECT/pipelines/discharge/start" \\\n-H "accept: */*" \\\n-H "api-token: YOUR-API-TOKEN"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=RESPONSE",title:"RESPONSE"},'{\n  "payload": null,\n  "errorMessages": []\n}\n\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Starting a pipeline may take some time. You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," method on the pipeline endpoint (as shown below) to verify that the pipeline has been started.")),(0,a.kt)("h2",{id:"verify-that-pipeline-is-started"},"Verify that pipeline is started"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="GET /v1/textanalysis/project/{projectName}/pipelines/{pipelineName}"',title:'"GET','/v1/textanalysis/project/{projectName}/pipelines/{pipelineName}"':!0},'curl -X GET "http://localhost:8080/health-discovery/rest/v1/textanalysis/projects/YOUR-PROJECT/pipelines/discharge" \n-H "accept: */*" \n-H "api-token: YOUR-API-TOKEN"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=RESPONSE",title:"RESPONSE"},'{\n  "payload": {\n    "id": 97025364,\n    "identifier": "K4HbNiCSFRegoHs_gvJU7YvAwMw=",\n    "name": "discharge",\n    "description": "no description",\n    "pipelineState": "STARTED",\n    "pipelineStateMessage": null,\n    "preconfigured": true\n  },\n  "errorMessages": []\n}\n')),(0,a.kt)("p",null," The pipelineState ",(0,a.kt)("inlineCode",{parentName:"p"},"STARTED")," indicates that the pipeline has been started successfully and is now ready to analyse text."))}d.isMDXComponent=!0}}]);