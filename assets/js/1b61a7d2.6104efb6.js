"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[927],{3905:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>h});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function p(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=n.createContext({}),o=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):p(p({},t),e)),i},c=function(e){var t=o(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=o(i),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return i?n.createElement(h,p(p({ref:t},c),{},{components:i})):n.createElement(h,p({ref:t},c))}));function h(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,p=new Array(r);p[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,p[1]=s;for(var o=2;o<r;o++)p[o]=i[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},2069:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var n=i(7462),a=(i(7294),i(3905));const r={sidebar_position:4},p="Step 4 - Start a pipeline",s={unversionedId:"quickstart/start-a-pipeline",id:"quickstart/start-a-pipeline",title:"Step 4 - Start a pipeline",description:"Health Discovery includes a variety of preconfigured NLP pipelines. This quickstart guide will use the discharge pipeline that is trained to extract medical entities like diagnoses, medications and laboratory values from patient records or discharge letters.",source:"@site/docs/quickstart/start-a-pipeline.md",sourceDirName:"quickstart",slug:"/quickstart/start-a-pipeline",permalink:"/docusaurus/docs/quickstart/start-a-pipeline",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Step 3 - Create a project",permalink:"/docusaurus/docs/quickstart/create-a-project"},next:{title:"Step 5 - Analyse health text data",permalink:"/docusaurus/docs/quickstart/analyse-text"}},l={},o=[{value:"Start the <code>discharge</code> pipeline",id:"start-the-discharge-pipeline",level:2},{value:"Verify that pipeline is started",id:"verify-that-pipeline-is-started",level:2}],c={toc:o},u="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"step-4---start-a-pipeline"},"Step 4 - Start a pipeline"),(0,a.kt)("p",null,"Health Discovery includes a variety of preconfigured NLP pipelines. This quickstart guide will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"discharge")," pipeline that is trained to extract medical entities like ",(0,a.kt)("inlineCode",{parentName:"p"},"diagnoses"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"medications")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"laboratory values")," from patient records or discharge letters."),(0,a.kt)("h2",{id:"start-the-discharge-pipeline"},"Start the ",(0,a.kt)("inlineCode",{parentName:"h2"},"discharge")," pipeline"),(0,a.kt)("p",null,"Start the ",(0,a.kt)("inlineCode",{parentName:"p"},"discharge")," pipeline in the ",(0,a.kt)("inlineCode",{parentName:"p"},"quickstart")," project. The pipeline will be started in background and it will take some time until it is available."),(0,a.kt)("p",null,"Please replace ",(0,a.kt)("inlineCode",{parentName:"p"},"YOUR-API-TOKEN")," with your API token."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="PUT /v1/textanalysis/projects/{projectName}/pipelines/{pipelineName}/start" showLineNumbers',title:'"PUT','/v1/textanalysis/projects/{projectName}/pipelines/{pipelineName}/start"':!0,showLineNumbers:!0},'curl -X PUT "http://localhost:8080/health-discovery/rest/v1/textanalysis/projects/quickstart/pipelines/discharge/start" \\\n-H "accept: */*" \\\n-H "api-token: YOUR-API-TOKEN"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=RESPONSE",title:"RESPONSE"},'{\n  "payload": null,\n  "errorMessages": []\n}\n\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Starting a pipeline may take some time. You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," method on the pipeline endpoint (as shown below) to verify that the pipeline has been started.")),(0,a.kt)("h2",{id:"verify-that-pipeline-is-started"},"Verify that pipeline is started"),(0,a.kt)("p",null,"The pipeline state indicates whether the pipeline has been started. It can be retrieved with the API call shown below."),(0,a.kt)("p",null,"Please replace ",(0,a.kt)("inlineCode",{parentName:"p"},"YOUR-API-TOKEN")," with your API token."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="GET /v1/textanalysis/project/{projectName}/pipelines/{pipelineName}"',title:'"GET','/v1/textanalysis/project/{projectName}/pipelines/{pipelineName}"':!0},'curl -X GET "http://localhost:8080/health-discovery/rest/v1/textanalysis/projects/quickstart/pipelines/discharge" \\\n-H "accept: */*" \\\n-H "api-token: YOUR-API-TOKEN"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=RESPONSE",title:"RESPONSE"},'{\n  "payload": {\n    "id": 97025364,\n    "identifier": "K4HbNiCSFRegoHs_gvJU7YvAwMw=",\n    "name": "discharge",\n    "description": "no description",\n    "pipelineState": "STARTED",\n    "pipelineStateMessage": null,\n    "preconfigured": true\n  },\n  "errorMessages": []\n}\n')),(0,a.kt)("p",null," The ",(0,a.kt)("inlineCode",{parentName:"p"},"pipelineState: STARTED")," indicates that the pipeline has been started successfully and is now ready to analyse text."))}d.isMDXComponent=!0}}]);